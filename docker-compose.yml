version: "3.9"
services:
  flask_labeler:
    build:
      context: backend
      dockerfile: LabelerDockerfile
    container_name: mlcheap-labeler
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
    volumes:
      - labelerdata:/home
    depends_on:
      - mongodb

  flask_sdk:
    build:
      context: backend
      dockerfile: SdkDockerFile
    container_name: mlcheap-sdk
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
    ports:
      - "6221:6221"
    volumes:
      - sdkdata:/home
    depends_on:
      - mongodb


  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /data/log
    volumes:
      - mongodbdata:/data/db
      - mongodblog:/data/log

  web_builder:
    build:
      context: webapp
      dockerfile: Dockerfile
    environment:
      APP_ENV: "prod"
      APP_NAME: "webservice"
      APP_DEBUG: "false"
      SERVICE_NAME: "webservice"
    volumes:
      - webapp_build:/build/build
    depends_on:
      - flask_labeler
      - httpd

  ml-backend:
    build:
      context: ml-backend
      dockerfile: Dockerfile
    volumes:
      - mldata:/home
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - skillmap
      - vacancies

  skillmap:
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    command: /cloud_sql_proxy --dir=/cloudsql -instances=skilllab-app:europe-west4:skillmap-pg13-production=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json
    volumes:
      - ./c.json:/secrets/cloudsql/credentials.json
    restart: always

  vacancies:
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    command: /cloud_sql_proxy --dir=/cloudsql -instances=skilllab-app:europe-west4:vacancies-api-prod=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json
    volumes:
      - ./c.json:/secrets/cloudsql/credentials.json
    restart: always

  httpd:
    build:
      context: httpd
      dockerfile: Dockerfile
    container_name: mlcheap-httpd
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - webapp_build:/srv/www/webapp


volumes:
  mongodbdata:
    driver: local
  mongodblog:
    driver: local
  labelerdata:
    driver: local
  sdkdata:
    driver: local
  webapp_build:
    driver: local
  mldata:
    driver: local
 
 
 
