version: "3.9"
services:
  flask_labeler:
    build:
      context: backend
      dockerfile: LabelerDockerfile
    container_name: mlcheap-labeler
    restart: unless-stopped
    environment:
      FRONT_URL: "https://skillLab.mlcheap.com"
      APP_ENV: "prod"
      APP_DEBUG: "False"
      MONGO_URL: "mongodb"
      MODEL_URL: "ml-backend:5000"
    ports:
      - "5100:5100"
    volumes:
      - ${LOGDIR}/labeler.log:/home/error.log
    depends_on:
      - mongodb


  flask_sdk:
    build:
      context: backend
      dockerfile: SdkDockerFile
    container_name: mlcheap-sdk
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      MONGO_URL: "mongodb"
    ports:
      - "6221:6221"
    volumes:
    volumes:
      - ${LOGDIR}/sdk.log:/home/error.log
    depends_on:
      - mongodb


  mongodb:
    image: mongo
    container_name: mlcheap-mongodb
    restart: unless-stopped
    environment:
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /data/log
    volumes:
      - ${SRVDIR}/mongodb:/data/db
      - ${LOGDIR}/mongodb.log:/data/log

  web_builder:
    container_name: mlcheap-webbuilder
    build:
      context: webapp
      dockerfile: Dockerfile
    environment:
      APP_ENV: "prod"
      APP_NAME: "webservice"
      APP_DEBUG: "false"
      SERVICE_NAME: "webservice"
      PROXY: "flask_labeler"
    volumes:
      - ${SRVDIR}/www/webapp:/build/build
    depends_on:
      - flask_labeler

  ml-backend:
    build:
      context: ml-backend
      dockerfile: Dockerfile
    container_name: mlcheap-ml-backend
    volumes:
      - ${SRVDIR}/ml-backend/models:/home/models
    environment:
      FLASK_APP: app
      FLASK_ENV: development
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - skillmap
      - vacancies

  skillmap:
    container_name: proxy-skillmap
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    command: /cloud_sql_proxy --dir=/cloudsql -instances=skilllab-app:europe-west4:skillmap-pg13-production=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json
    ports:
      - "8765:5432"
    volumes:
      - ${SRVDIR}/sql_proxy/credentials.json:/secrets/cloudsql/credentials.json
    restart: always

  vacancies:
    container_name: proxy-vacancies
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    command: /cloud_sql_proxy --dir=/cloudsql -instances=skilllab-app:europe-west4:vacancies-api-prod=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json
    ports:
      - "5678:5432"
    volumes:
      - ${SRVDIR}/sql_proxy/credentials.json:/secrets/cloudsql/credentials.json
    restart: always

  httpd:
    build:
      context: httpd
      dockerfile: Dockerfile
    container_name: mlcheap-httpd
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${SRVDIR}/www/webapp:/srv/www/webapp
      - ${SRVDIR}/ssl:/srv/ssl
    depends_on:
      - web_builder
 
 
 
